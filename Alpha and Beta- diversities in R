#### Microbiome analysis for biginner 
#### This protocol should be adapted by users according to what they are looking for

#### Set the working directory to the analysis folder where all your data is located
setwd("path/to/your/folder")

#### loading packages
library("Matrix")
library("reshape2")
library("vegan")
library("pairwiseAdonis")
library(patchwork)  # For combining plots

ALPHADIVERSITY

####Test whether the observed number of OTUs differs significantly between groups (Alpha diversity parameters)

## Calculate Chao1 and Shannon properly
div_data <- estimate_richness(ps2, measures = c("Chao1", "Shannon" ))

## Merge with metadata
d <- cbind(meta(ps2), div_data)

## Subset to only "Anopheles gambiae" samples
d_gambiae <- d %>% filter(Species == "Anopheles_gambiae")

## Prepare pairwise comparisons
Status.levels <- levels(as.factor(d$Status))
Status.pairs <- combn(Status.levels, 2, simplify = FALSE)

## Plot Chao1
my_colors <- c("#E7B800", "#00AFBB", "#FC4E07", "#7D3C98", "#2980B9", "#1ABC9C", 
               "#F39C12", "#D35400", "#C0392B", "#BDC3C7", "#2ECC71", "#8E44AD")
p_chao1 <- ggboxplot(d_gambiae, x = "Status", y = "Chao1",
                     color = "Status", palette = my_colors,
                     add = "jitter", shape = "Status") +
                     theme(legend.position = "none") +
  stat_compare_means(comparisons = Status.pairs, label = "p.signif", 
                     label.y = max(d_gambiae$Shannon, na.rm = TRUE) * 1.05) +
  stat_compare_means(label.y = max(d_gambiae$Shannon, na.rm = TRUE) * 1.2) +
  ggtitle("Chao1 Diversity Index")


## Plot Shannon
p_shannon <- ggboxplot(d_gambiae, x = "Status", y = "Shannon",
                       color = "Status", palette = my_colors,
                       add = "jitter", shape = "Status") +
  theme(legend.position = "right")+
  stat_compare_means(comparisons = Status.pairs) +
  stat_compare_means(label.y = max(d$Shannon, na.rm = TRUE) * 1.05) +
  ggtitle("Shannon Diversity Index")

## Combine plots together
p_chao1 + p_shannon  # Side by side


### Subset only for Anopheles funestus
div_data_fun <- estimate_richness(ps2, measures = c("Chao1", "Shannon" ))

## Merge with metadata
d_fun <- cbind(meta(ps2), div_data_fun)

## Subset to only "Anopheles funestus" samples
d_funestus <- d_fun %>% filter(Species == "Anopheles_funestus")

## Prepare pairwise comparisons
Status.levels <- levels(as.factor(d$Status))
Status.pairs <- combn(Status.levels, 2, simplify = FALSE)

## Plot Chao1
my_colors <- c("#E7B800", "#00AFBB", "#FC4E07", "#7D3C98", "#2980B9", "#1ABC9C", 
               "#F39C12", "#D35400", "#C0392B", "#BDC3C7", "#2ECC71", "#8E44AD")
p_chao1_fun <- ggboxplot(d_funestus, x = "Status", y = "Chao1",
                         color = "Status", palette = my_colors,
                         add = "jitter", shape = "Status") +
  theme(legend.position = "none") +
  stat_compare_means(comparisons = Status.pairs) +   # Pairwise p-values
  stat_compare_means(label.y = max(d$Chao1, na.rm = TRUE) * 1.05) +  # Overall p-value
  ggtitle("Chao1 Diversity Index")

## Plot Shannon
p_shannon_fun <- ggboxplot(d_funestus, x = "Status", y = "Shannon",
                           color = "Status", palette = my_colors,
                           add = "jitter", shape = "Status") +
  theme(legend.position = "right")+
  stat_compare_means(comparisons = Status.pairs) +
  stat_compare_means(label.y = max(d$Shannon, na.rm = TRUE) * 1.05) +
  ggtitle("Shannon Diversity Index")

## Combine plots together
p_chao1_fun + p_shannon_fun  # Side by side



BETADIVERSITY

library("Matrix")
library("reshape2")
library("vegan")
library("pairwiseAdonis")

### Compare community dissimilarities in overall groups  using bray-curtis index 
### Anopheles gambiae
## Plot the PCoA graph of all the groups
relab_genera1 = transform_sample_counts(Agamb, function(x) x / sum(x) * 100) 
ord1 = ordinate(relab_genera1, method="PCoA", distance = "bray")
plot_ordination(relab_genera1, ord1, color = "Status", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Status=Status))

## Run PERMANOVA for statistic analysis
otu1 <- abundances(Agamb)
pseq.rel1 <- microbiome::transform(Agamb, "compositional")
meta1 <- meta(pseq.rel1)
permanova_results <- adonis2(t(otu1_clean) ~ Status, 
                      data = meta1_clean, permutations = 999, method = "bray")
permanova_results

## Pairwise comparison between two groups. For example: select "Survivors" and "Kisumu"
## Plot the PCoA plot for the two groups
relab_genera1_filtre <- subset_samples(relab_genera1, Status2 %in% c("Survivors", "Kisumu")
ord1_filtre <- ordinate(relab_genera1_filtre, method = "PCoA", distance = "bray")
plot_ordination(relab_genera1_filtre, ord1_filtre, color = "Status2", shape = "Test") +
  geom_point(size = 3) +
  stat_ellipse(aes(color = Status2)

## Run PERMANOVA for statistic analysis of the 2 selected groups
group_interest <- c("Survivors", "Kisumu")
meta1_filtre <- meta1[meta1$Status2 %in% groupes_interet, ]
otu1_filtre <- otu1[, rownames(meta1_filtre)]
pairwise_permanova_results <- pairwise.adonis2(t(ord1_filtre) ~ Status2, 
                                               data = meta1_filtre,
                                               perm = 999, 
                                               method = "bray")
# View results
print(pairwise_permanova_results)

### Anopheles funestus
## Plot the PCoA graph
relab_genera2 = transform_sample_counts(Afun, function(x) x / sum(x) * 100) 
ord2 = ordinate(relab_genera2, method="PCoA", distance = "bray")
plot_ordination(relab_genera2, ord2, color = "Status", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Status=Status))

## Run PERMANOVA for statistic analysis
otu2 <- abundances(Afun)
pseq.rel2 <- microbiome::transform(Afun, "compositional")
meta2 <- meta(pseq.rel2)
permanova2 <- adonis2(t(otu2) ~ Status,
                      data = meta2, permutations=999, method = "bray")
permanova2




####PHYLOGENETIC TREE

####We can create a random phylogenetic tree with the ape packagedataset. Make sure its tip labels match your OTU_table.
##Species
random_tree = rtree(ntaxa(ps2), rooted=TRUE, tip.label=taxa_names(ps2))
plot(random_tree)
physeq = merge_phyloseq(ps2, random_tree)
physeq
plot_tree(physeq, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

##Anopheles gambiae
random_treegamb = rtree(ntaxa(carbomgamb), rooted=TRUE, tip.label=taxa_names(carbomgamb))
plot(random_treegamb)
physeqgamb = merge_phyloseq(carbomgamb, random_treegamb)
physeqgamb
plot_tree(physeqgamb, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

##Anopheles funestus
random_treefun = rtree(ntaxa(carbomfun), rooted=TRUE, tip.label=taxa_names(carbomfun))
plot(random_treefun)
physeqfun = merge_phyloseq(carbomfun, random_treefun)
physeqfun
plot_tree(physeqfun, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

##Hierarchical clustering based on Bray-Curtis Index values, showing the relationship between different samples and group
##acccording to Anopheles species
ps_rel_abundgamb = phyloseq::transform_sample_counts(physeqgamb, function(x){x / sum(x)})
phyloseq::otu_table(physeqgamb)[1:5, 1:5]
ps_rel_otugamb <- data.frame(phyloseq::otu_table(ps_rel_abundgamb))
ps_rel_otugamb <- t(ps_rel_otugamb)
bc_distgamb <- vegan::vegdist(ps_rel_otugamb, method = "bray")
as.matrix(bc_distgamb)[1:5, 1:5]
wardgamb <- as.dendrogram(hclust(bc_distgamb, method = "ward.D2"))
metagamb <- data.frame(phyloseq::sample_data(ps_rel_abundgamb))
colorCode <- c(`Gpp` = "#0048BA", `Gtach` = "#B0BF1A", `Gcal` = "#7CB9E8", `Gpal` = "#C0E8D5")
labels_colors(wardgamb) <- colorCode[meta$Phenotypes][order.dendrogram(wardgamb)]
plot(wardgamb)

#We can create a random phylogenetic tree with the ape package in An. funestusdataset. Make sure its tip labels match your OTU_table.
random_treefun = rtree(ntaxa(carbomfun), rooted=TRUE, tip.label=taxa_names(carbomfun))
plot(random_treefun)
physeqfun = merge_phyloseq(carbomfun, random_treefun)
physeqfun
plot_tree(physeqfun, color = "Genus", label.tips="Genus", ladderize="left", plot.margin=0.3)
plot_tree(physeqfun, color="Phenotypes", shape="Phenotypes", label.tips="Genus", ladderize="left", plot.margin=0.3)

##Hierarchical clustering based on Bray-Curtis Index values, showing the relationship between different samples and group
##acccording to Anopheles species
ps_rel_abundfun = phyloseq::transform_sample_counts(physeqfun, function(x){x / sum(x)})
phyloseq::otu_table(physeqfun)[1:5, 1:5]
ps_rel_otufun <- data.frame(phyloseq::otu_table(ps_rel_abundfun))
ps_rel_otufun <- t(ps_rel_otufun)
bc_distfun <- vegan::vegdist(ps_rel_otufun, method = "bray")
as.matrix(bc_distfun)[1:5, 1:5]
wardfun <- as.dendrogram(hclust(bc_distfun, method = "ward.D2"))
metafun <- data.frame(phyloseq::sample_data(ps_rel_abundfun))
colorCode <- c(`Gpp` = "#0048BA", `Gtach` = "#B0BF1A", `Gcal` = "#7CB9E8", `Gpal` = "#C0E8D5")
labels_colors(wardfun) <- colorCode[meta$Phenotypes][order.dendrogram(wardfun)]
plot(wardfun)



BETADIVERSITY

library("phyloseq")
library("ggplot2")
library("dplyr")
library("ggpubr")
library("Matrix")
library("reshape2")
library("vegan")

## Compare community dissimilarities in each group using bray-curtis index
relab_genera = transform_sample_counts(ps2, function(x) x / sum(x) * 100) 
ord = ordinate(relab_genera, method="PCoA", distance = "bray")
plot_ordination(relab_genera, ord, color = "Species", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Species=Species))

##PERMANOVA significance test for group-level differences using bray-curtis index
pseq.rel <- microbiome::transform(ps2, "compositional")
otu <- abundances(ps2)
meta <- meta(pseq.rel)
permanova <- adonis2(t(otu) ~ Species,
                     data = meta, permutations=999, method = "bray")
permanova

## Compare community dissimilarities in each phenotype using bray-curtis index
##Anopheles gambiae
relab_genera1 = transform_sample_counts(carbomgamb, function(x) x / sum(x) * 100) 
ord1 = ordinate(relab_genera1, method="PCoA", distance = "bray")
plot_ordination(relab_genera1, ord1, color = "Phenotypes", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Phenotypes=Phenotypes))
otu1 <- abundances(carbomgamb)
pseq.rel1 <- microbiome::transform(carbomgamb, "compositional")
meta1 <- meta(pseq.rel1)
permanova1 <- adonis2(t(otu1) ~ Phenotypes, 
                      data = meta1, permutations=999, method = "bray")
permanova1

##Anopheles funestus
relab_genera2 = transform_sample_counts(carbomfun, function(x) x / sum(x) * 100) 
ord2 = ordinate(relab_genera2, method="PCoA", distance = "bray")
plot_ordination(relab_genera2, ord2, color = "Phenotypes", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Phenotypes=Phenotypes))
otu2 <- abundances(carbomfun)
pseq.rel2 <- microbiome::transform(carbomfun, "compositional")
meta2 <- meta(pseq.rel2)
permanova2 <- adonis2(t(otu2) ~ Phenotypes,
                      data = meta2, permutations=999, method = "bray")
permanova2






ds2 <- phyloseq_to_deseq2(carbomgamb, ~ Phenotypes)
dds <- DESeq(ds2)
res <- results(dds)
deseq.results <- as.data.frame(res)
df <- deseq.results
df$taxon <- rownames(df)
df1 <- df %>% arrange(log2FoldChange, padj)
df2 <- df1 %>% filter(pvalue < 0.05 & log2FoldChange < -1.5) %>%
  arrange(pvalue, log2FoldChange)
df3 <- df1 %>% filter(pvalue < 0.05 & log2FoldChange > 1.5) %>%
  arrange(pvalue, log2FoldChange)
df3
kable(df2, digits = 5)
kable(df3, digits = 5)















library(lefser)
res <- lefser(ps2, groupCol = "codes", blockCol = "codes")
sample_data(ps2)$code <- as.factor(sample_data(ps2)$code)
ps.taxa <- tax_glom(ps2, taxrank = 'Genus', NArm = FALSE)
ps.taxa.pse <- ps2
otu_table(ps.taxa.pse) <- otu_table(ps.taxa) + 1
ps.taxa.pse.sub <- subset_samples(ps.taxa.pse, code %in% c("fzu", "fzse"))
ds = phyloseq_to_deseq2(ps.taxa.pse.sub, ~ code)
ds = DESeq(ds, test="Wald", fitType="non parametric")
ds
alpha = 0.05 
res = results(ds, alpha=alpha)
res = res[order(res$padj, na.last=NA), ]

res

library(BiocManager)

if (!require("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
BiocManager::install(version = "4.3")




















#### Plot Heatmap abundance plot of the Genus to capture the best candidate bacteria
carbom_abund <- filter_taxa(ps2, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbom_abund)
plot_heatmap(carbom_abund, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")

## Anopheles gambiae 
carbomgamb_abund <- filter_taxa(carbom_fraction, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbomgamb_abund)
plot_heatmap(carbomgamb_abund, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")

## Anopheles funestus
carbom_abundfun <- filter_taxa(carbom_fractionfun, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbom_abundfun)
plot_heatmap(carbom_abundfun, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")
