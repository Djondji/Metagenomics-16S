#### Microbiome analysis for beginner 
#### This protocol should be adapted by users according to what they are looking for

#### Set the working directory to the analysis folder where all your data is located
setwd("path/to/your/folder")

#### loading packages
library("Matrix")
library("reshape2")
library("vegan")
library("pairwiseAdonis")
library(patchwork)  # For combining plots
library(rstatix)

ALPHADIVERSITY

####Test whether the observed number of OTUs differs significantly between groups (Alpha diversity parameters)

## Calculate Chao1 and Shannon properly
div_data <- estimate_richness(ps2, measures = c("Chao1", "Shannon" ))

## Merge with metadata
d <- cbind(meta(ps2), div_data)

## Example: Subset to only "Anopheles gambiae" samples
d_gambiae <- d %>% filter(Species == "Anopheles_gambiae")

## Pairwise comparison using the Wilcoxon test. 
stat.test <- d_gambiae %>%
  pairwise_wilcox_test(Shannon ~ Status, p.adjust.method = "fdr")

## Define the pairs to be compared (optional if you want to choose them manually)
Status.pairs <- combn(unique(d_gambiae$Status), 2, simplify = FALSE)

## Calculate Kruskal-Wallis test and p-value for Shannon index diversity
kruskal_res <- d_gambiae %>% kruskal_test(Shannon ~ Status)
p_val <- signif(kruskal_res$p, 3)

## Build the Shannon plot
Shannon_gamb <- ggboxplot(d_gambiae, x = "Status", y = "Shannon",
          color = "Status", palette = "jco", add = "jitter") +
  theme_bw()+
  theme(legend.position = "right",
        legend.title = element_text(size = 13, face = "bold"),
        legend.text = element_text(size = 12),
        axis.text.x = element_text(size = 13)) +  # <-- controls legend appearance
  stat_compare_means(comparisons = Status.pairs, 
                     method = "wilcox.test", 
                     label = "p.signif") +
  stat_summary(fun = mean, geom = "text", 
               aes(label = round(..y.., 2)), 
               vjust = -0.5, size = 2.5) +
  annotate("text", 
           x = -Inf, y = Inf, 
           label = paste0("Kruskal-Wallis, p = ", p_val),
           hjust = -0.1, vjust = 1.5, size = 4) +
  ggtitle("Shannon Diversity Index â€“ Pairwise Comparison")

## Calculate Kruskal-Wallis test and p-value for Chao1 index diversity
p_val <- d_gambiae %>%
  kruskal_test(Chao1 ~ Status) %>%
  pull(p) %>%
  signif(3)

Shannon_gamb

##  Build the Chao1 plot
Chao1_gamb <- ggboxplot(d_gambiae, x = "Status", y = "Chao1",
                        color = "Status", palette = "jco", add = "jitter") +
  theme_bw() +
  theme(legend.position = "right",
        legend.text = element_text(size = 12), 
        legend.title = element_text(size = 13, face = "bold"),
        axis.text.x = element_text(size = 12.5)) +
  stat_compare_means(comparisons = Status.pairs, 
                     method = "wilcox.test", 
                     label = "p.signif") +  # Pairwise p-values
  stat_summary(fun = mean, geom = "text", 
               aes(label = round(..y.., 2)), 
               vjust = -0.5, size = 4) +  # Show mean values
  annotate("text", 
           x = -Inf, y = Inf, 
           label = paste0("Kruskal-Wallis, p = ", p_val),
           hjust = -0.1, vjust = 1.5, size = 4) +  # Annotate Kruskal-Wallis test p-value
  ggtitle("Chao1 Diversity Index")

Chao1_gamb

## Combine the two figures
Shannon_gamb + Chao1_gamb

### Subset only for Anopheles funestus
div_data_fun <- estimate_richness(ps2, measures = c("Chao1", "Shannon" ))

## Merge with metadata
d_fun <- cbind(meta(ps2), div_data_fun)

## Subset to only "Anopheles funestus" samples
d_funestus <- d_fun %>% filter(Species == "Anopheles_funestus")

## Prepare pairwise comparisons
Status.levels <- levels(as.factor(d$Status))
Status.pairs <- combn(Status.levels, 2, simplify = FALSE)

## Define the colors of the plot
my_colors <- c("#E7B800", "#00AFBB", "#FC4E07", "#7D3C98", "#2980B9", "#1ABC9C", 
               "#F39C12", "#D35400", "#C0392B", "#BDC3C7", "#2ECC71", "#8E44AD")

## Plot Shannon
p_shannon_fun <- ggboxplot(d_funestus, x = "Status", y = "Shannon",
                           color = "Status", palette = my_colors,
                           add = "jitter", shape = "Status") +
  theme_bw() +
  theme(legend.position = "none",
        legend.text = element_text(size = 11), 
        legend.title = element_text(size = 12, face = "bold"),
        axis.text.x = element_text(size = 13)) +
  stat_compare_means(comparisons = Status.pairs) +
  stat_compare_means(label.y = max(d$Shannon, na.rm = TRUE) * 1.05) +
  stat_summary(fun = mean, geom = "text", 
               aes(label = round(..y.., 2)), 
               vjust = -0.5, size = 4, color = "black") + # Add mean values for Shannon
  ggtitle("Shannon Diversity Index")

p_shannon_fun

# Cha01 Index
p_chao1_fun <- ggboxplot(d_funestus, x = "Status", y = "Chao1",
                         color = "Status", palette = my_colors,
                         add = "jitter", shape = "Status") +
  theme_bw() +
  theme(legend.position = "right",
        legend.text = element_text(size = 11), 
        legend.title = element_text(size = 13, face = "bold"),
        axis.text.x = element_text(size = 13)) +
  stat_compare_means(comparisons = Status.pairs) +
  # Pairwise p-values
  stat_compare_means(label.y = max(d$Chao1, na.rm = TRUE) * 1.05) +  # Overall p-value
  stat_summary(fun = mean, geom = "text", 
               aes(label = round(..y.., 2)), 
               vjust = -0.5, size = 4) +  # Display Chao1 mean values inside the plot
  ggtitle("Chao1 Diversity Index")

p_chao1_fun


## Combine plots together
p_shannon_fun + p_chao1_fun # Side by side



BETADIVERSITY

### Compare community dissimilarities in overall groups  using bray-curtis index 
### Anopheles gambiae
## Plot the PCoA graph of all the groups
relab_genera1 = transform_sample_counts(Agamb, function(x) x / sum(x) * 100) 
ord1 = ordinate(relab_genera1, method="PCoA", distance = "bray")
plot_ordination(relab_genera1, ord1, color = "Status", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Status=Status))

## Run PERMANOVA for statistic analysis
otu1 <- abundances(Agamb)
pseq.rel1 <- microbiome::transform(Agamb, "compositional")
meta1 <- meta(pseq.rel1)
permanova_results <- adonis2(t(otu1_clean) ~ Status, 
                      data = meta1_clean, permutations = 999, method = "bray")
permanova_results

## Pairwise comparison between two groups. For example: select "Survivors" and "Kisumu"
## Plot the PCoA plot for the two groups
relab_genera1_filtre <- subset_samples(relab_genera1, Status2 %in% c("Survivors", "Kisumu")
ord1_filtre <- ordinate(relab_genera1_filtre, method = "PCoA", distance = "bray")
plot_ordination(relab_genera1_filtre, ord1_filtre, color = "Status2", shape = "Test") +
  geom_point(size = 3) +
  stat_ellipse(aes(color = Status2)

## Run PERMANOVA for statistic analysis of the 2 selected groups
group_interest <- c("Survivors", "Kisumu")
meta1_filtre <- meta1[meta1$Status2 %in% groupes_interet, ]
otu1_filtre <- otu1[, rownames(meta1_filtre)]
pairwise_permanova_results <- pairwise.adonis2(t(ord1_filtre) ~ Status2, 
                                               data = meta1_filtre,
                                               perm = 999, 
                                               method = "bray")
# View results
print(pairwise_permanova_results)

### Anopheles funestus
## Plot the PCoA graph
relab_genera2 = transform_sample_counts(Afun, function(x) x / sum(x) * 100) 
ord2 = ordinate(relab_genera2, method="PCoA", distance = "bray")
plot_ordination(relab_genera2, ord2, color = "Status", shape="Test") + 
  geom_point(size=3) + 
  stat_ellipse(aes(Status=Status))

## Run PERMANOVA for statistic analysis
otu2 <- abundances(Afun)
pseq.rel2 <- microbiome::transform(Afun, "compositional")
meta2 <- meta(pseq.rel2)
permanova2 <- adonis2(t(otu2) ~ Status,
                      data = meta2, permutations=999, method = "bray")
permanova2
