PHYLOGENETIC TREE

## Loading package
Library("ape")

####We can create a random phylogenetic tree with the ape package in overall sample
random_tree = rtree(ntaxa(ps2), rooted=TRUE, tip.label=taxa_names(ps2))
plot(random_tree)
physeq = merge_phyloseq(ps2, random_tree)
physeq
plot_tree(physeq, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

## Anopheles gambiae
random_treegamb = rtree(ntaxa(Agamb), rooted=TRUE, tip.label=taxa_names(Agamb))
plot(random_treegamb)
physeqgamb = merge_phyloseq(Agamb, random_treegamb)
physeqgamb
plot_tree(physeqgamb, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

##Anopheles funestus
random_treefun = rtree(ntaxa(Afun), rooted=TRUE, tip.label=taxa_names(Afun))
plot(random_treefun)
physeqfun = merge_phyloseq(Afun, random_treefun)
physeqfun
plot_tree(physeqfun, color = "Genus", label.tips="Genus", ladderize="right", plot.margin=0.3)

Hierarchical clustering

##Hierarchical clustering based on Bray-Curtis Index values, showing the relationship between different samples and group
## An. gambiae
ps_rel_abundgamb = phyloseq::transform_sample_counts(physeqgamb, function(x){x / sum(x)})
phyloseq::otu_table(physeqgamb)[1:5, 1:5]
ps_rel_otugamb <- data.frame(phyloseq::otu_table(ps_rel_abundgamb))
ps_rel_otugamb <- t(ps_rel_otugamb)
bc_distgamb <- vegan::vegdist(ps_rel_otugamb, method = "bray")
as.matrix(bc_distgamb)[1:5, 1:5]
wardgamb <- as.dendrogram(hclust(bc_distgamb, method = "ward.D2"))
metagamb <- data.frame(phyloseq::sample_data(ps_rel_abundgamb))
colorCode <- c(`Gpp` = "#0048BA", `Gtach` = "#B0BF1A", `Gcal` = "#7CB9E8", `Gpal` = "#C0E8D5")
labels_colors(wardgamb) <- colorCode[meta$Status][order.dendrogram(wardgamb)]
plot(wardgamb)

## An. funestus
ps_rel_abundfun = phyloseq::transform_sample_counts(physeqfun, function(x){x / sum(x)})
phyloseq::otu_table(physeqfun)[1:5, 1:5]
ps_rel_otufun <- data.frame(phyloseq::otu_table(ps_rel_abundfun))
ps_rel_otufun <- t(ps_rel_otufun)
bc_distfun <- vegan::vegdist(ps_rel_otufun, method = "bray")
as.matrix(bc_distfun)[1:5, 1:5]
wardfun <- as.dendrogram(hclust(bc_distfun, method = "ward.D2"))
metafun <- data.frame(phyloseq::sample_data(ps_rel_abundfun))
colorCode <- c(`Gpp` = "#0048BA", `Gtach` = "#B0BF1A", `Gcal` = "#7CB9E8", `Gpal` = "#C0E8D5")
labels_colors(wardfun) <- colorCode[meta$Phenotypes][order.dendrogram(wardfun)]
plot(wardfun)





















#### Plot Heatmap abundance plot of the Genus to capture the best candidate bacteria
carbom_abund <- filter_taxa(ps2, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbom_abund)
plot_heatmap(carbom_abund, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")

## Anopheles gambiae 
carbomgamb_abund <- filter_taxa(carbom_fraction, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbomgamb_abund)
plot_heatmap(carbomgamb_abund, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")

## Anopheles funestus
carbom_abundfun <- filter_taxa(carbom_fractionfun, function(x) sum(x > total*0.05) > 0, TRUE)
otu_table(carbom_abundfun)
plot_heatmap(carbom_abundfun, method = "MDS", distance = "bray", 
             taxa.label = "Genus", taxa.order = "Genus", 
             trans=NULL, low="beige", high="red", na.value="beige")

